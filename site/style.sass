@import url(https://cdn.jsdelivr.net/gh/tonsky/FiraCode@4/distr/fira_code.css)

\:root
    /* dark gruvbox theme colors again */
    --bg_h: #1d2021
    --bg: #282828
    --bg_s: #32302f
    --bg1: #3c3836
    --bg2: #504945
    --bg3: #665c54
    --bg4: #7c6f64

    --fg: #fbf1c7
    --fg1: #ebdbb2
    --fg2: #d5c4a1
    --fg3: #bdae93
    --fg4: #a89984

    --red: #fb4934
    --green: #b8bb26
    --yellow: #fabd2f
    --blue: #83a598
    --purple: #d3869b
    --aqua: #8ec07c
    --gray: #928374
    --orange: #fe8019

    --red-dim: #cc2412
    --green-dim: #98971a
    --yellow-dim: #d79921
    --blue-dim: #458588
    --purple-dim: #b16286
    --aqua-dim: #689d6a
    --gray-dim: #a89984
    --orange-dim: #d65d0e

    --white: #ffffff

    --alpha-red: transparentize(var(--red), 34%)
    --alpha-white: transparentize(var(--white), 34%)
    --header-height: 6rem

@media (prefers-color-scheme: light)
    \:root
        /* light gruvbox theme colors */
        --bg: #f9f5d7
        --bg_h: #fbf1c7
        --bg_s: #f2e5bc
        --bg1: #ebdbb2
        --bg2: #d5c4a1
        --bg3: #bdae93
        --bg4: #a89984

        --fg: #282828
        --fg1: #3c3836
        --fg2: #504945
        --fg3: #665c54
        --fg4: #7c6f64

        --red: #9d0006
        --green: #79740e
        --yellow: #b57614
        --blue: #076678
        --purple: #8f3f71
        --aqua: #427b58
        --orange: #af3a03
        --gray: #928374

        --red-dim: #cc2412
        --green-dim: #98971a
        --yellow-dim: #d79921
        --blue-dim: #458598
        --purple-dim: #b16286
        --aqua-dim: #689d6a
        --orange-dim: #d65d0e
        --gray-dim: #7c6f64

        --alpha-red: transparentize(var(--red), 34%)
        --link-color: var(--blue-dim)

$alpha-white: rgba(256, 256, 256, 0.66)
$font_headers: 'Playfair Display', serif
$font_body: 'Fira Code', sans-serif

// 960 is half a 1920*1080 screen's width. We give 10pixels of margin.
$layout-breakpoint-small: 950px

*,*::before,*::after,:root
    box-sizing: border-box
    //transform-style: preserve-3d

body
    //overflow-x: scroll
    //overflow-y: scrollcolor-mix(in srgb, var(--red) 66%,
    //height: 100%
    margin: 0
    color: var(--fg)
    --bg-angle: -8deg
    --bg-sep: calc(50vh - sin(var(--bg-angle)) * 100vw / 2)
    background-image: linear-gradient(var(--bg-angle), var(--bg) 0 var(--bg-sep), var(--bg1) var(--bg-sep) 100vh)
    background-attachment: fixed
    font-family: $font_body
    font-size: 14px
    @media (max-width: $layout-breakpoint-small)
    --bg-sep: calc(30vh - sin(var(--bg-angle)) * 100vw / 2)




\:root
    --margin-top-body: 1rem

#body
    position: relative
    margin: auto
    display: grid
    max-width: calc(min(18rem + 48rem, 100%))
    grid-template-columns: 18rem 1fr
    column-gap: 1rem
    margin-top: var(--margin-top-body)
    margin-bottom: 2rem
    padding-left: 1rem
    padding-right: 1rem
    @media (max-width: $layout-breakpoint-small)
        grid-template-columns: 1fr
        padding-left: 1rem
        padding-right: 1rem
a
    color: var(--blue)
a:hover
    color: var(--blue-dim)

a:active
    color: var(--blue)

::selection
    color: #ffffff
    background-color: var(--red)
    text-shadow: $alpha-white 0 0 .25em

header
    background-color: var(--bg_h)
    border-bottom: solid thin var(--red)
    font-family: $font_headers
    box-shadow: var(--alpha-red) 0 0 10px 0
    padding-left: 1rem
    position: sticky
    top: 0
    width: 100%
    height: var(--header-height)
    z-index: 100
    border-image: linear-gradient(170deg, var(--red) 50%, var(--white)) 100
    h1
        width: fit-content
        margin: 0
        padding: 1rem
        a
            color: var(--fg) !important
            text-decoration: none
            text-shadow: var(--bg) 0 0 3px, var(--bg) 0 0 3px, var(--bg) 0 0 5px, var(--bg) 0 0 5px
    @media (max-width: $layout-breakpoint-small)
        position: relative

h1,h2,h3
    font-family: $font_headers

@mixin strength($color-1, $color-2, $percentage)
    height: 0.5em
    width: 8em
    margin-left: 1rem
    min-width: 8em
    border-radius: 0.1rem
    display: block
    //background-color: $color-1
    box-shadow: $color-1 0px 0px 2px
    background-image: linear-gradient(90deg, $color-1 0%, $percentage, $color-2 $percentage)

.strength-1
    @include strength(var(--red), transparent, 30%)
.strength-2
    @include strength(var(--red), transparent, 50%)
.strength-3
    @include strength(var(--red), transparent, 70%)
.strength-4
    @include strength(var(--red), transparent, 90%)
.strength-item
    display: flex
    flex-flow: row nowrap
    justify-content: space-between
    align-items: baseline
a.strength-item:hover
    .strength-1
        @include strength(var(--white), transparent, 30%)
    .strength-2
        @include strength(var(--white), transparent, 50%)
    .strength-3
        @include strength(var(--white), transparent, 70%)
    .strength-4
        @include strength(var(--white), transparent, 90%)

nav#sidebar
    grid-column: 1 / span 1
    grid-row: 2 / span 1
    align-self: start
    color: var(--fg1)
    font-style: italic
    height: min-content
    max-height: calc(100vh - var(--header-height) - var(--margin-top-body) - 2rem)
    overflow: auto
    position: sticky
    top: calc(var(--header-height) + var(--margin-top-body))
    @media (max-width: $layout-breakpoint-small)
        grid-column: 1
        grid-row: 3
    h2
        font-style: normal
        font-size: large
    section
        border: solid thin #ffffff
        box-shadow: var(--alpha-red) 0 0 5px, inset var(--red) 0 0 5px
        margin-bottom: 1rem
        padding: 0 1rem 0 1rem
        border: var(--fg) solid thin
        border-radius: 5px
        background-color: var(--bg)
    section#navmenu
        overflow: hidden
        padding: 0
    a
        text-decoration: none
        color: var(--fg)
        &:hover
            color: var(--fg2)
    a.button
        padding: 0.5rem
        text-align: center
        display: block
        font-style: normal
        font-weight: bold
        margin: 0 .5rem 0 .5rem
    a.button:not(:last-child)
        border-bottom: solid thin var(--fg)
    a.current::before
        content: "> "
        float: left
    .strength-1, .strength-2, .strength-3, .strength-4
        width: 100%
        margin-left: 0
    .strength-item
        display: block

#breadcrumbs
    grid-row: 1
    grid-column: 2
    height: fit-content
    margin: 0
    padding: 0
    margin-bottom: 0.5rem
    font-size: 0.9em
    @media (max-width: $layout-breakpoint-small)
        grid-column: 1
        grid-row: 1
    li
        display: inline
        &:not(:first-child)::before
            content: "/"
        a
            text-decoration: none

#content
    //z-index: -1
    width: 100%
    overflow: auto
    height: fit-content
    grid-column: 2 / span 1
    grid-row: 2 / span 1
    align-self: start
    border: var(--fg) thin solid
    border-radius: 5px
    background: var(--bg)
    padding-left: 2rem
    padding-right: 2rem
    padding-bottom: 1rem
    text-align: justify
    overflow-wrap: break-word
    @media (max-width: $layout-breakpoint-small)
        text-align: start
        grid-column: 1
        grid-row: 2
        margin-bottom: 1rem
        width: 100%
        border: none
        background-color: transparent
        padding-left: 0rem
        padding-right: 0rem
    p
        margin-top: 0.5rem
        margin-bottom: 0.5rem
    h1,h2,h3
        margin-top: 0.5em
        margin-bottom: 0.5em
    h1
        font-size: 1.5rem
    h2
        font-size: 1.2rem
    h3
        font-size: 1.1rem
    .subtitle
        font-size: 0.8em
        font-weight: 200
        font-family: 'Fira Sans', sans-serif
        font-style: italic
    h3+.subtitle
        margin-top: -1em
    .item
        border-left: solid 2px transparent
        padding-left: 1rem
        padding-right: 1rem
        &:hover
            border-left: 2px var(--fg) solid
    ul
        padding-left: 1em
        li
            list-style: square

.icon
    display: inline-block
    width: 2em
    margin-right: 0.5em

#sidebar-wrapper
    width: min-content
    height: min-content

#voronoi
    position: absolute
    top: 0
    left: 0
    width: 100% !important
    height: 100% !important
    opacity: 0.8
    z-index: -1
    color: var(--red)

pre
    padding: 0.5rem
    background-color: var(--bg1)
    border-radius: 0.2rem
    border: thin solid var(--fg4)
    width: 100%
    overflow: auto

img
    max-width: 100%
    margin: auto
    display: block
    color: var(--aqua)
    text-align: center
    @media (max-width: $layout-breakpoint-small)
        max-width: 100%
.img+.caption
    display: block
    font-size: 0.9em
    width: 100%
    text-align: center
    margin-top: 0.2em
    font-style: italic

\:root
    --source-code-comment: var(--gray)
    --source-code-docstring: var(--green-dim)
    --source-code-lident: var(--fg1)
    --source-code-uident: var(--blue)
    --source-code-literal: var(--yellow)
    --source-code-keyword: var(--red)
    --source-code-underscore: var(--fg3)
    --source-code-operator: var(--purple)
    --source-code-parens: var(--orange-dim)
    --source-code-separator: var(--orange-dim)

/* Keywords */
.AND, .ANDOP, .AS, .ASSERT,
.BAR, .BEGIN,
.CLASS, .CONSTRAINT,
.DO, .DONE, .DOWNTO,
.ELSE, .END, .EXCEPTION, .EXTERNAL,
.FOR, .FUN, .FUNCTION, .FUNCTOR,
.IF, .IN, .INCLUDE, .INHERIT, .INITIALIZER,
.LAZY, .LESSMINUS, .LET, .LETOP,
.MATCH, .METHOD, .MINUSGREATER, .MODULE, .MUTABLE,
.NEW, .NONREC,
.OBJECT, .OF, .OPEN,
.PERCENT, .PRIVATE,
.REC,
.SEMISEMI, .SIG, .STRUCT,
.THEN, .TO, .TRY, .TYPE,
.VAL, .VIRTUAL,
.WHEN, .WITH, .WHILE

    color: var(--source-code-keyword)

/* Separators */
.COMMA, .COLON, .COLONGREATER, .SEMI
    color: var(--source-code-separator)

/* Parens
 `begin` and `end ` are excluded because `end` is used in other, more
 keyword-y contexts*/
.BARRBRACKET,
.LBRACE,
.LBRACELESS,
.LBRACKET,
.LBRACKETAT,
.LBRACKETATAT,
.LBRACKETATATAT,
.LBRACKETBAR,
.LBRACKETGREATER,
.LBRACKETLESS,
.LBRACKETPERCENT,
.LBRACKETPERCENTPERCENT,
.LPAREN,
.RBRACE,
.RBRACKET,
.RPAREN
    color: var(--source-code-parens)

/* Prefix operators */
.ASSERT, .BANG, .PREFIXOP,
/* Infix operators.
 A choice had to be made for equal `=` which is both a keyword and an operator.
 It looked better having it as an operator, because when it is a keyword,
 there are already loads of keyword around.
 It would look even nicer if there was a way to distinguish between these
 two cases.*/
.INFIXOP0, .INFIXOP1, .INFIXOP2, .INFIXOP3, .INFIXOP4,
.BARBAR, .PLUS, .STAR, .AMPERAMPER, .AMPERAND, .COLONEQUAL, .GREATER, .LESS,
.MINUS, .MINUSDOT, .MINUSGREATER, .OR, .PLUSDOT, .PLUSEQ, .EQUAL
    color: var(--source-code-operator)

/* Upper case ident
 `true` and `false` are considered uident here, because you can bind them in a
 constructor defintion :
 ```ocaml
 type my_bool =
 | true of string
 | false
 | Other of int
 ``` */
.UIDENT, .COLONCOLON, .TRUE, .FALSE
    color: var(--source-code-uident)

/* Lower case idents.
 Quotes are here because of `type 'a t = 'a list`,
 and question mark and tildes because of
 ```ocaml
 let f ~a ?b () = Option.map a b
 ``` */
.LIDENT, .QUESTION, .QUOTE, .TILDE
    color: var(--source-code-lident)

/* Litterals */
.STRING, .CHAR, .INT, .FLOAT, .QUOTED_STRING_EXPR, .QUOTED_STRING_ITEM
    color: var(--source-code-literal)

.UNDERSCORE
    color: var(--source-code-underscore)

.DOCSTRING
    color: var(--source-code-docstring)

.COMMENT
    color: var(--source-code-comment)
